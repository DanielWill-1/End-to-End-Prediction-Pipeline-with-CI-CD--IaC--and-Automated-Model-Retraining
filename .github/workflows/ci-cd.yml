name: CI/CD - Build and Push Docker Image

# --- 1. Trigger ---
# This workflow runs on every 'push' to the 'main' branch
on:
  push:
    branches: [ "main" ]

# --- 2. Environment Variables ---
# Set an env var for your package name.
# IMPORTANT: Change 'YOUR_GITHUB_USERNAME' to your actual GitHub username.
env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/my-diabetes-api

# --- 3. Jobs ---
jobs:
  build_and_push:
    runs-on: ubuntu-latest # Use a standard Linux runner

    # --- 4. Permissions ---
    # Give the job permissions to write to the GitHub Package registry
    permissions:
      contents: read
      packages: write

    # --- 5. Steps ---
    steps:
      # Step 1: Check out your repository code
      - name: Check out the repo
        uses: actions/checkout@v4

      # Step 2: Log in to the GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # GITHUB_TOKEN is a special secret automatically created by Actions
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Set up Docker Buildx (a builder toolkit)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 4: Build the Docker image and push it to GHCR
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .              # Use the current directory as build context
          file: ./Dockerfile      # Path to the Dockerfile
          push: true              # Actually push the image (not just build)
          tags: ${{ env.IMAGE_NAME }}:latest # Tag the image as 'latest'
          cache-from: type=inline # Use inline caching
          cache-to: type=inline

      # Step 5: (Optional) A step to confirm it worked
      - name: Image pushed
        run: echo "Image ${{ env.IMAGE_NAME }}:latest pushed successfully."